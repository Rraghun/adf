{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "09062019fbadf"
		},
		"integrationRuntime_092019adflab-ssis": {
			"type": "string",
			"metadata": "Integration Runtime Name",
			"defaultValue": "092019adflab-ssis"
		},
		"integrationRuntime_selfhostedintegrationruntime": {
			"type": "string",
			"metadata": "Integration Runtime Name",
			"defaultValue": "selfhostedintegrationruntime"
		},
		"09062019adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of '09062019adls'"
		},
		"09062019fbblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of '09062019fbblob'"
		},
		"09062019fbsql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of '09062019fbsql'"
		},
		"AzureSqlDatabaseadfwatermarkload_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseadfwatermarkload'"
		},
		"SqlServerlinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerlinkedservice'"
		},
		"SqlServerlinkedservice_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerlinkedservice'"
		},
		"onpremisesql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onpremisesql'"
		},
		"onpremisesql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onpremisesql'"
		},
		"sqlserverlinkdsvcadfwatermark_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlserverlinkdsvcadfwatermark'"
		},
		"09062019adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://09062019adls.dfs.core.windows.net"
		},
		"SqlServerlinkedservice_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\rraghun"
		},
		"onpremisesql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "northamerica\\rraghun"
		},
		"092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "09adflabsqlsy3lm.database.windows.net"
		},
		"092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "rraghun"
		},
		"092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy data from on premise SQL Server to SQL Azure1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure Datetable",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "delete from date",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"DateID": "DateID",
									"Date": "Date",
									"DayNumber": "DayNumber",
									"DayOfWeekNumber": "DayOfWeekNumber",
									"DayOfWeekName": "DayOfWeekName",
									"WeekName": "WeekName",
									"Week": "Week",
									"DayOfYear": "DayOfYear",
									"MonthNumber": "MonthNumber",
									"MonthName": "MonthName",
									"Year": "Year",
									"CalendarQuarter": "CalendarQuarter",
									"FiscalYear": "FiscalYear",
									"FiscalMonth": "FiscalMonth",
									"FiscalQuarter": "FiscalQuarter",
									"FiscalBiMonth": "FiscalBiMonth"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OnpremiseSQLdate",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "09062019SQLDBdate",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sqltosqlazure people",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "delete from people",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"PeopleID": "PeopleID",
									"PersonID": "PersonID",
									"LastCommaFirstName": "LastCommaFirstName",
									"FirstName": "FirstName",
									"LastName": "LastName",
									"PersonStatus": "PersonStatus",
									"PrimaryTeam": "PrimaryTeam",
									"Email": "Email",
									"City": "City",
									"State": "State",
									"PersonImage": "PersonImage"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "09062019SQLDBPeople",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "09062019SQLDBPeople",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sqltosqlazureprojecttree",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "delete from  projecttree",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"ProjectTreeID": "ProjectTreeID",
									"Type": "Type",
									"Project": "Project",
									"Phase": "Phase",
									"Task": "Task"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "09062019sqldbprojecttree",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "09062019sqldbprojecttree",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sqltosqlazuretimeentered",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "delete from timeentered",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TimeEnteredID": "TimeEnteredID",
									"DateID": "DateID",
									"ProjectTreeID": "ProjectTreeID",
									"PeopleID": "PeopleID",
									"SkillSetsID": "SkillSetsID",
									"SkillSetCompetency": "SkillSetCompetency",
									"Notes": "Notes",
									"Actual": "Actual",
									"Billable": "Billable",
									"UnitPrice": "UnitPrice",
									"NonWKKFUnitPrice": "NonWKKFUnitPrice"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "09062019sqldbtimeentered",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "09062019sqldbtimeentered",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sqltosqlazureskillsets",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "delete from skillsets",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"SkillSetsID": "SkillSetsID",
									"SkillSet": "SkillSet",
									"SkillSetDescription": "SkillSetDescription"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "09062019sqldbskillsets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "09062019sqldbskillsets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnpremiseSQLdate')]",
				"[concat(variables('factoryId'), '/datasets/09062019SQLDBdate')]",
				"[concat(variables('factoryId'), '/datasets/09062019SQLDBPeople')]",
				"[concat(variables('factoryId'), '/datasets/09062019sqldbprojecttree')]",
				"[concat(variables('factoryId'), '/datasets/09062019sqldbtimeentered')]",
				"[concat(variables('factoryId'), '/datasets/09062019sqldbskillsets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IterateSQLTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableList",
								"type": "Expression"
							},
							"isSequential": "false",
							"activities": [
								{
									"name": "LookupOldWaterMarkActivity",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from watermarktable where TableName  =  '@{item().TABLE_NAME}'",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "watermarkdatasetadfwatermark",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LookupNewWaterMarkActivity",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select MAX(@{item().WaterMark_Column}) as NewWatermarkvalue from @{item().TABLE_NAME}",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "SqlServerTableadfwaterload",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "IncrementalCopyActivity",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupNewWaterMarkActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "LookupOldWaterMarkActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().TABLE_NAME} where @{item().WaterMark_Column} > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and @{item().WaterMark_Column} <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "SqlSink",
											"SqlWriterTableType": "@{item().TableType}",
											"SqlWriterStoredProcedureName": "@{item().StoredProcedureNameForMergeOperation}"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SqlServerTableadfwaterload",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTablesinkadfwatermark",
											"type": "DatasetReference",
											"parameters": {
												"SinkTableName": "@{item().TableType}"
											}
										}
									]
								},
								{
									"name": "StoredProceduretoWriteWatermarkActivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "IncrementalCopyActivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "usp_write_watermark",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
													"type": "Expression"
												},
												"type": "datetime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabaseadfwatermarkload",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"tableList": {
						"type": "Object"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/watermarkdatasetadfwatermark')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTableadfwaterload')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTablesinkadfwatermark')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseadfwatermarkload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Move SQL to ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Date",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnpremiseSQLdate",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyPeople",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremiseSQLPeople",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTimeEntered",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremiseSQLTimeEntered",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Skillsets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremiseSQLSkillSets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Projecttree",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OnPremiseSQLProjecttree",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnpremiseSQLdate')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/OnPremiseSQLPeople')]",
				"[concat(variables('factoryId'), '/datasets/OnPremiseSQLTimeEntered')]",
				"[concat(variables('factoryId'), '/datasets/OnPremiseSQLSkillSets')]",
				"[concat(variables('factoryId'), '/datasets/OnPremiseSQLProjecttree')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyfromblobtosqlpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_64a",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "09062019fbstrgcntr//inputemp.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.emp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_64a",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_64a",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_64a')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_64a')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyfromsqltoblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_8gp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Date"
							},
							{
								"name": "Destination",
								"value": "09062019fbstrgcntr//date.txt"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_8gp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_8gp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_8gp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_8gp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019SQLDBPeople')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PeopleID",
						"type": "Int32"
					},
					{
						"name": "PersonID",
						"type": "String"
					},
					{
						"name": "LastCommaFirstName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "PersonStatus",
						"type": "String"
					},
					{
						"name": "PrimaryTeam",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "PersonImage",
						"type": "Byte[]"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[People]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019SQLDBdate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "DateID",
						"type": "Int32"
					},
					{
						"name": "Date",
						"type": "DateTime"
					},
					{
						"name": "DayNumber",
						"type": "Int32"
					},
					{
						"name": "DayOfWeekNumber",
						"type": "Int32"
					},
					{
						"name": "DayOfWeekName",
						"type": "String"
					},
					{
						"name": "WeekName",
						"type": "String"
					},
					{
						"name": "Week",
						"type": "DateTime"
					},
					{
						"name": "DayOfYear",
						"type": "Int32"
					},
					{
						"name": "MonthNumber",
						"type": "Int32"
					},
					{
						"name": "MonthName",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "Int32"
					},
					{
						"name": "CalendarQuarter",
						"type": "String"
					},
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "FiscalMonth",
						"type": "Int32"
					},
					{
						"name": "FiscalQuarter",
						"type": "String"
					},
					{
						"name": "FiscalBiMonth",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Date]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019sqldbprojecttree')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "ProjectTreeID",
						"type": "Int32"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Project",
						"type": "String"
					},
					{
						"name": "Phase",
						"type": "String"
					},
					{
						"name": "Task",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[ProjectTree]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019sqldbskillsets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "SkillSetsID",
						"type": "Int32"
					},
					{
						"name": "SkillSet",
						"type": "String"
					},
					{
						"name": "SkillSetDescription",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[SkillSets]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019sqldbtimeentered')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "TimeEnteredID",
						"type": "Int32"
					},
					{
						"name": "DateID",
						"type": "Int32"
					},
					{
						"name": "ProjectTreeID",
						"type": "Int32"
					},
					{
						"name": "PeopleID",
						"type": "Int32"
					},
					{
						"name": "SkillSetsID",
						"type": "Int32"
					},
					{
						"name": "SkillSetCompetency",
						"type": "Int32"
					},
					{
						"name": "Notes",
						"type": "String"
					},
					{
						"name": "Actual",
						"type": "Single"
					},
					{
						"name": "Billable",
						"type": "Single"
					},
					{
						"name": "UnitPrice",
						"type": "Decimal"
					},
					{
						"name": "NonWKKFUnitPrice",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[TimeEntered]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTablesinkadfwatermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseadfwatermarkload",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SinkTableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"typeProperties": {
					"tableName": {
						"value": "@{dataset().SinkTableName}",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseadfwatermarkload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "09062019adls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_64a')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "09062019fbsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FirstName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_8gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "09062019fbblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "date.txt",
						"container": "09062019fbstrgcntr"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLPeople')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "onpremisesql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "PeopleID",
						"type": "Int32"
					},
					{
						"name": "PersonID",
						"type": "String"
					},
					{
						"name": "LastCommaFirstName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "PersonStatus",
						"type": "String"
					},
					{
						"name": "PrimaryTeam",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "PersonImage",
						"type": "Byte[]"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[People]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremisesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLProjecttree')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "onpremisesql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "ProjectTreeID",
						"type": "Int32"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Project",
						"type": "String"
					},
					{
						"name": "Phase",
						"type": "String"
					},
					{
						"name": "Task",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[ProjectTree]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremisesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLSkillSets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "onpremisesql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "SkillSetsID",
						"type": "Int32"
					},
					{
						"name": "SkillSet",
						"type": "String"
					},
					{
						"name": "SkillSetDescription",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[SkillSets]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremisesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremiseSQLTimeEntered')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "onpremisesql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TimeEnteredID",
						"type": "Int32"
					},
					{
						"name": "DateID",
						"type": "Int32"
					},
					{
						"name": "ProjectTreeID",
						"type": "Int32"
					},
					{
						"name": "PeopleID",
						"type": "Int32"
					},
					{
						"name": "SkillSetsID",
						"type": "Int32"
					},
					{
						"name": "SkillSetCompetency",
						"type": "Int32"
					},
					{
						"name": "Notes",
						"type": "String"
					},
					{
						"name": "Actual",
						"type": "Single"
					},
					{
						"name": "Billable",
						"type": "Single"
					},
					{
						"name": "UnitPrice",
						"type": "Decimal"
					},
					{
						"name": "NonWKKFUnitPrice",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[TimeEntered]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremisesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnpremiseSQLdate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "onpremisesql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "DateID",
						"type": "Int32"
					},
					{
						"name": "Date",
						"type": "DateTime"
					},
					{
						"name": "DayNumber",
						"type": "Int32"
					},
					{
						"name": "DayOfWeekNumber",
						"type": "Int32"
					},
					{
						"name": "DayOfWeekName",
						"type": "String"
					},
					{
						"name": "WeekName",
						"type": "String"
					},
					{
						"name": "Week",
						"type": "DateTime"
					},
					{
						"name": "DayOfYear",
						"type": "Int32"
					},
					{
						"name": "MonthNumber",
						"type": "Int32"
					},
					{
						"name": "MonthName",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "Int32"
					},
					{
						"name": "CalendarQuarter",
						"type": "String"
					},
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "FiscalMonth",
						"type": "Int32"
					},
					{
						"name": "FiscalQuarter",
						"type": "String"
					},
					{
						"name": "FiscalBiMonth",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Date]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremisesql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_64a')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "09062019fbblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputemp.txt",
						"container": "09062019fbstrgcntr"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/09062019fbblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_8gp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Date"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTableadfwaterload')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlserverlinkdsvcadfwatermark",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dummyName"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlserverlinkdsvcadfwatermark')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/watermarkdatasetadfwatermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseadfwatermarkload",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseadfwatermarkload')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('09062019adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('09062019adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019fbblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('09062019fbblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/09062019fbsql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('09062019fbsql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseadfwatermarkload')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseadfwatermarkload_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerlinkedservice_connectionString')]",
					"userName": "[parameters('SqlServerlinkedservice_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerlinkedservice_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_selfhostedintegrationruntime')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_selfhostedintegrationruntime'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremisesql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onpremisesql_connectionString')]",
					"userName": "[parameters('onpremisesql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onpremisesql_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_selfhostedintegrationruntime')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_selfhostedintegrationruntime'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlserverlinkdsvcadfwatermark')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sqlserverlinkdsvcadfwatermark_connectionString')]"
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_selfhostedintegrationruntime')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_selfhostedintegrationruntime'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_092019adflab-ssis'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US 2",
						"nodeSize": "Standard_D2_v3",
						"numberOfNodes": 1,
						"maxParallelExecutionsPerNode": 1
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('092019adflab-ssis_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "Basic"
						},
						"edition": "Enterprise",
						"licenseType": "BasePrice"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_selfhostedintegrationruntime'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}